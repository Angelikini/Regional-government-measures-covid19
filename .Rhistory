}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(lubridate)){
install.packages("lubridate")
library(lubridate)
}
if(!require(grid)){
install.packages("grid")
library(grid)
}
if(!require(scales)){
install.packages("scales")
library(scales)
}
if(!require(patchwork)){
install.packages("patchwork")
library(patchwork)
}
##Task 1: Timeline of when the first measure was adopted (global)
datesorted<-measures[order(measures$date_implemented),] #sort gm data based on date and save in a new object
firstmeasure<- datesorted[match(unique(datesorted$country), datesorted$country),] #I kept only the first measure adoption for each country
firstmeasure<-firstmeasure[!is.na(firstmeasure$date_implemented), ]  #I decided to remove the rows with NA in the date_implemented. Alternatively I could have used the date of entry as a proxy.
###Assign colours to regions
region_range <- c("Asia", "Europe", "Americas", "Africa","Middle East","Pacific")
region_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d","#9a9a9a", "#a6a6a6")
firstmeasure$region <- factor(firstmeasure$region, levels=region_range, ordered=TRUE)
###Assign positions and direction for the plot so measures occuring at the same date won't clash
firstmeasure<-firstmeasure %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1))
firstmeasure$positions <- ave(firstmeasure$direction, cumsum(c(0, diff(firstmeasure$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
text_offset <- 0.05
firstmeasure$date_count <- ave(firstmeasure$date_implemented==firstmeasure$date_implemented, firstmeasure$date_implemented, FUN=cumsum)
firstmeasure$text_position <- (firstmeasure$date_count * text_offset * firstmeasure$direction) + firstmeasure$positions
###create a new framework with the months
month_date_range <- seq(min(firstmeasure$date_implemented), max(firstmeasure$date_implemented), by='month')
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
day_date_range <- seq(min(firstmeasure$date_implemented), max(firstmeasure$date_implemented), by='day')
day_format <- format(day_date_range, '%d')
day_df <- data.frame(day_date_range, day_format)
###create the plot
timeline_plot<-ggplot(firstmeasure,aes(x=date_implemented,y=0, col=region, label=country))
timeline_plot+labs(col="Countries")+
scale_color_manual(values=region_colors, labels=region_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=firstmeasure[firstmeasure$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure timeline_greyscale.png",width=30)
### Save the dataset in excel
write.xlsx(firstmeasure,"~/GitHub/covid-data-ODI-submittion/firstmeasurebycountry.xlsx")
##Task 2: Regional timelines
###Africa
fmafrica<-subset(firstmeasure, region=="Africa") #subset africa
africa_range <- c("Western Africa","Northern Africa","Middle Africa","Eastern Africa","Southern Africa") #assign colours to subregion
africa_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d","#9a9a9a")
fmafrica$subregion <- factor(fmafrica$subregion, levels=africa_range, ordered=TRUE)
fmafrica<-fmafrica %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmafrica$positions <- ave(fmafrica$direction, cumsum(c(0, diff(fmafrica$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmafrica$date_count <- ave(fmafrica$date_implemented==fmafrica$date_implemented, fmafrica$date_implemented, FUN=cumsum)
fmafrica$text_position <- (fmafrica$date_count * text_offset * fmafrica$direction) + fmafrica$positions
p1<-ggplot(fmafrica,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=africa_colors, labels=africa_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmafrica[fmafrica$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure africa timeline_greyscale.png",width=25)
###Asia
fmasia<-subset(firstmeasure, region=="Asia") #subset africa
asia_range <- c("Eastern Asia","Southeastern Asia","Southern Asia","Central Asia") #assign colours to subregion
asia_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmasia$subregion <- factor(fmasia$subregion, levels=asia_range, ordered=TRUE)
fmasia<-fmasia %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmasia$positions <- ave(fmasia$direction, cumsum(c(0, diff(fmasia$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmasia$date_count <- ave(fmasia$date_implemented==fmasia$date_implemented, fmasia$date_implemented, FUN=cumsum)
fmasia$text_position <- (fmasia$date_count * text_offset * fmasia$direction) + fmasia$positions
p2<-ggplot(fmasia,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=asia_colors, labels=asia_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmasia[fmasia$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure asia timeline_greyscale.png",width=25)
###Europe
fmeurope<-subset(firstmeasure, region=="Europe") #subset africa
europe_range <- c("Eastern Europe","Northern Europe","Southern Europe","Western Europe") #assign colours to subregion
europe_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmeurope$subregion <- factor(fmeurope$subregion, levels=europe_range, ordered=TRUE)
fmeurope<-fmeurope %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmeurope$positions <- ave(fmeurope$direction, cumsum(c(0, diff(fmeurope$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmeurope$date_count <- ave(fmeurope$date_implemented==fmeurope$date_implemented, fmeurope$date_implemented, FUN=cumsum)
fmeurope$text_position <- (fmeurope$date_count * text_offset * fmeurope$direction) + fmeurope$positions
p3<-ggplot(fmeurope,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=europe_colors, labels=europe_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmeurope[fmeurope$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure europe timeline_greyscale.png",width=25)
###America
fmamerica<-subset(firstmeasure, region=="Americas") #subset africa
america_range <- c("Central America","North America","South America","Caribbean") #assign colours to subregion
america_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmamerica$subregion <- factor(fmamerica$subregion, levels=america_range, ordered=TRUE)
fmamerica<-fmamerica %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmamerica$positions <- ave(fmamerica$direction, cumsum(c(0, diff(fmamerica$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmamerica$date_count <- ave(fmamerica$date_implemented==fmamerica$date_implemented, fmamerica$date_implemented, FUN=cumsum)
fmamerica$text_position <- (fmamerica$date_count * text_offset * fmamerica$direction) + fmamerica$positions
p4<-ggplot(fmamerica,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=america_colors, labels=america_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmamerica[fmamerica$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure americas timeline_greyscale.png",width=25)
###Middle east
fmmiddleeast<-subset(firstmeasure, region=="Middle East") #subset africa
middle_east_range <- c("Western Asia","Southern Asia","Southeastern Asia") #assign colours to subregion
middle_east_colors <- c("#5a5a5a", "#676767","#737373")
fmmiddleeast$subregion <- factor(fmmiddleeast$subregion, levels=middle_east_range, ordered=TRUE)
fmmiddleeast<-fmmiddleeast %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmmiddleeast$positions <- ave(fmmiddleeast$direction, cumsum(c(0, diff(fmmiddleeast$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmmiddleeast$date_count <- ave(fmmiddleeast$date_implemented==fmmiddleeast$date_implemented, fmmiddleeast$date_implemented, FUN=cumsum)
fmmiddleeast$text_position <- (fmmiddleeast$date_count * text_offset * fmmiddleeast$direction) + fmmiddleeast$positions
p5<-ggplot(fmmiddleeast,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=middle_east_colors, labels=middle_east_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmmiddleeast[fmmiddleeast$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure middle east timeline_greyscale.png",width=25)
###Pacific
fmpacific<-subset(firstmeasure, region=="Pacific") #subset africa
pacific_range <- c("Micronesia","Polynesia","Melanesia","Australia and New Zealand") #assign colours to subregion
pacific_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmpacific$subregion <- factor(fmpacific$subregion, levels=pacific_range, ordered=TRUE)
fmpacific<-fmpacific %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmpacific$positions <- ave(fmpacific$direction, cumsum(c(0, diff(fmpacific$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmpacific$date_count <- ave(fmpacific$date_implemented==fmpacific$date_implemented, fmpacific$date_implemented, FUN=cumsum)
fmpacific$text_position <- (fmpacific$date_count * text_offset * fmpacific$direction) + fmpacific$positions
p6<-ggplot(fmpacific,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=pacific_colors, labels=pacific_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmpacific[fmpacific$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure pacific timeline_greyscale.png",width=25)
figure<-A/B/C/D/E/F + plot_layout(ncol = 1)+ plot_annotation(
title = "Regional timelines of adoption of first COVID-19 measure")
View(figure)
figure
rm(list=setdiff(ls(), c("measures","cases","deaths")))
##Load packages
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)
}
if(!require(xlsx)){
install.packages("xlsx")
library(xlsx)
}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)
}
if(!require(lubridate)){
install.packages("lubridate")
library(lubridate)
}
if(!require(grid)){
install.packages("grid")
library(grid)
}
if(!require(scales)){
install.packages("scales")
library(scales)
}
if(!require(patchwork)){
install.packages("patchwork")
library(patchwork)
}
datesorted<-measures[order(measures$date_implemented),] #sort gm data based on date and save in a new object
firstmeasure<- datesorted[match(unique(datesorted$country), datesorted$country),] #I kept only the first measure adoption for each country
firstmeasure<-firstmeasure[!is.na(firstmeasure$date_implemented), ]  #I decided to remove the rows with NA in the date_implemented. Alternatively I could have used the date of entry as a proxy.
###Assign colours to regions
region_range <- c("Asia", "Europe", "Americas", "Africa","Middle East","Pacific")
region_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d","#9a9a9a", "#a6a6a6")
firstmeasure$region <- factor(firstmeasure$region, levels=region_range, ordered=TRUE)
###Assign positions and direction for the plot so measures occuring at the same date won't clash
firstmeasure<-firstmeasure %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1))
firstmeasure$positions <- ave(firstmeasure$direction, cumsum(c(0, diff(firstmeasure$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
text_offset <- 0.05
firstmeasure$date_count <- ave(firstmeasure$date_implemented==firstmeasure$date_implemented, firstmeasure$date_implemented, FUN=cumsum)
firstmeasure$text_position <- (firstmeasure$date_count * text_offset * firstmeasure$direction) + firstmeasure$positions
###create a new framework with the months
month_date_range <- seq(min(firstmeasure$date_implemented), max(firstmeasure$date_implemented), by='month')
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
day_date_range <- seq(min(firstmeasure$date_implemented), max(firstmeasure$date_implemented), by='day')
day_format <- format(day_date_range, '%d')
day_df <- data.frame(day_date_range, day_format)
###create the plot
timeline_plot<-ggplot(firstmeasure,aes(x=date_implemented,y=0, col=region, label=country))
timeline_plot+labs(col="Countries")+
scale_color_manual(values=region_colors, labels=region_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=firstmeasure[firstmeasure$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure timeline_greyscale.png",width=30)
### Save the dataset in excel
write.xlsx(firstmeasure,"~/GitHub/covid-data-ODI-submittion/firstmeasurebycountry.xlsx")
###Africa
fmafrica<-subset(firstmeasure, region=="Africa") #subset africa
africa_range <- c("Western Africa","Northern Africa","Middle Africa","Eastern Africa","Southern Africa") #assign colours to subregion
africa_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d","#9a9a9a")
fmafrica$subregion <- factor(fmafrica$subregion, levels=africa_range, ordered=TRUE)
fmafrica<-fmafrica %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmafrica$positions <- ave(fmafrica$direction, cumsum(c(0, diff(fmafrica$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmafrica$date_count <- ave(fmafrica$date_implemented==fmafrica$date_implemented, fmafrica$date_implemented, FUN=cumsum)
fmafrica$text_position <- (fmafrica$date_count * text_offset * fmafrica$direction) + fmafrica$positions
p1<-ggplot(fmafrica,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=africa_colors, labels=africa_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmafrica[fmafrica$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure africa timeline_greyscale.png",width=25)
###Asia
fmasia<-subset(firstmeasure, region=="Asia") #subset africa
asia_range <- c("Eastern Asia","Southeastern Asia","Southern Asia","Central Asia") #assign colours to subregion
asia_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmasia$subregion <- factor(fmasia$subregion, levels=asia_range, ordered=TRUE)
fmasia<-fmasia %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmasia$positions <- ave(fmasia$direction, cumsum(c(0, diff(fmasia$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmasia$date_count <- ave(fmasia$date_implemented==fmasia$date_implemented, fmasia$date_implemented, FUN=cumsum)
fmasia$text_position <- (fmasia$date_count * text_offset * fmasia$direction) + fmasia$positions
p2<-ggplot(fmasia,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=asia_colors, labels=asia_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmasia[fmasia$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure asia timeline_greyscale.png",width=25)
p1
###Europe
fmeurope<-subset(firstmeasure, region=="Europe") #subset africa
europe_range <- c("Eastern Europe","Northern Europe","Southern Europe","Western Europe") #assign colours to subregion
europe_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmeurope$subregion <- factor(fmeurope$subregion, levels=europe_range, ordered=TRUE)
fmeurope<-fmeurope %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmeurope$positions <- ave(fmeurope$direction, cumsum(c(0, diff(fmeurope$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmeurope$date_count <- ave(fmeurope$date_implemented==fmeurope$date_implemented, fmeurope$date_implemented, FUN=cumsum)
fmeurope$text_position <- (fmeurope$date_count * text_offset * fmeurope$direction) + fmeurope$positions
p3<-ggplot(fmeurope,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=europe_colors, labels=europe_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmeurope[fmeurope$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure europe timeline_greyscale.png",width=25)
###America
fmamerica<-subset(firstmeasure, region=="Americas") #subset africa
america_range <- c("Central America","North America","South America","Caribbean") #assign colours to subregion
america_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmamerica$subregion <- factor(fmamerica$subregion, levels=america_range, ordered=TRUE)
fmamerica<-fmamerica %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmamerica$positions <- ave(fmamerica$direction, cumsum(c(0, diff(fmamerica$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmamerica$date_count <- ave(fmamerica$date_implemented==fmamerica$date_implemented, fmamerica$date_implemented, FUN=cumsum)
fmamerica$text_position <- (fmamerica$date_count * text_offset * fmamerica$direction) + fmamerica$positions
p4<-ggplot(fmamerica,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=america_colors, labels=america_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmamerica[fmamerica$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure americas timeline_greyscale.png",width=25)
###Middle east
fmmiddleeast<-subset(firstmeasure, region=="Middle East") #subset africa
middle_east_range <- c("Western Asia","Southern Asia","Southeastern Asia") #assign colours to subregion
middle_east_colors <- c("#5a5a5a", "#676767","#737373")
fmmiddleeast$subregion <- factor(fmmiddleeast$subregion, levels=middle_east_range, ordered=TRUE)
fmmiddleeast<-fmmiddleeast %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmmiddleeast$positions <- ave(fmmiddleeast$direction, cumsum(c(0, diff(fmmiddleeast$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmmiddleeast$date_count <- ave(fmmiddleeast$date_implemented==fmmiddleeast$date_implemented, fmmiddleeast$date_implemented, FUN=cumsum)
fmmiddleeast$text_position <- (fmmiddleeast$date_count * text_offset * fmmiddleeast$direction) + fmmiddleeast$positions
p5<-ggplot(fmmiddleeast,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=middle_east_colors, labels=middle_east_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmmiddleeast[fmmiddleeast$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure middle east timeline_greyscale.png",width=25)
###Pacific
fmpacific<-subset(firstmeasure, region=="Pacific") #subset africa
pacific_range <- c("Micronesia","Polynesia","Melanesia","Australia and New Zealand") #assign colours to subregion
pacific_colors <- c("#5a5a5a", "#676767","#737373","#8d8d8d")
fmpacific$subregion <- factor(fmpacific$subregion, levels=pacific_range, ordered=TRUE)
fmpacific<-fmpacific %>% mutate(direction = if_else(as.double(str_sub(date_implemented, -1)) %% 2 == 0, -1, 1)) #Assign positions and direction for the plot so measures occuring at the same date won't clash
fmpacific$positions <- ave(fmpacific$direction, cumsum(c(0, diff(fmpacific$direction)) != 0), FUN = function(x) x*seq(1, by = 0.5, length.out = length(x)))
fmpacific$date_count <- ave(fmpacific$date_implemented==fmpacific$date_implemented, fmpacific$date_implemented, FUN=cumsum)
fmpacific$text_position <- (fmpacific$date_count * text_offset * fmpacific$direction) + fmpacific$positions
p6<-ggplot(fmpacific,aes(x=date_implemented,y=0, col=subregion, label=country))+labs(col="Countries")+
scale_color_manual(values=pacific_colors, labels=pacific_range, drop = FALSE)+
theme_classic()+
geom_hline(yintercept=0,color = "black", size=0.3)+ # Plot horizontal black line for timeline
geom_segment(data=fmpacific[fmpacific$date_count == 1,], aes(y=positions,yend=0,xend=date_implemented), color='black', size=0.2)+ # Plot vertical segment lines for countries
geom_point(aes(y=0), size=3)+ # Plot scatter points at zero and date
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)+ # Don't show axes, appropriately position legend
geom_text(data=month_df, aes(x=month_date_range,y=-0.5,label=month_format),size=2,vjust=1.5, color='black', angle=0)+ # Show text for each month
geom_text(data=day_df, aes(x=day_date_range,y=-0.2,label=day_format),size=2,vjust=1.5, color='black', angle=0,label.padding=1)+ # Show text for each day
geom_text(aes(y=text_position,label=country),size=2.5)+ # Show text for each milestone
ggsave(filename="First measure pacific timeline_greyscale.png",width=25)
figure<-A/B/C/D/E/F + plot_layout(ncol = 1)+ plot_annotation(
title = "Regional timelines of adoption of first COVID-19 measure")
figure
figure<-p1/p2/p3/p4/p5/p6 + plot_layout(ncol = 1)+ plot_annotation(
title = "Regional timelines of adoption of first COVID-19 measure")
figure
if(!require(cowplot)){
install.packages("cowplot")
library(cowplot)
}
plot_grid(p1,p2,p3,p4,p5,p6,labels = c("Africa","Asia","Europe","Americas","Middle east","Pacific"),ncol = 1, nrow = 6)
figure<-plot_grid(p1,p2,p3,p4,p5,p6,labels = c("Africa","Asia","Europe","Americas","Middle east","Pacific"),ncol = 1, nrow = 6)
figure
figure<-plot_grid(p1,p2,p3,p4,p5,p6,labels = c("Africa","Asia","Europe","Americas","Middle east","Pacific"),label_size = 10,ncol = 1, nrow = 6)
figure
?align_plots
figure<-align_plots(p1,p2,p3,p4,p5,p6,align="v")
figure
